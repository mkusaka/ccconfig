#compdef claude
# Zsh completion for Claude CLI
# Generated automatically - do not edit manually

_claude() {
    local -a commands
    commands=(
        'config:Manage configuration settings'
        'mcp:Manage MCP servers'
        'migrate-installer:Migrate from installer-based Claude'
        'setup-token:Set up authentication token'
        'doctor:Check Claude installation'
        'update:Update Claude CLI'
        'install:Install Claude CLI'
    )

    local -a global_options
    global_options=(
        '(-h --help)'{-h,--help}'[Show help]'
        '(-v --version)'{-v,--version}'[Show version]'
        '(-c --continue)'{-c,--continue}'[Continue last conversation]'
        '(-r --resume)'{-r,--resume}'[Resume specific session]:session ID:'
        '(-p --print)'{-p,--print}'[Print mode with prompt]:prompt:'
        '--api-key[API key]:key:'
        '--model[Model to use]:model:(claude-3-opus-20240229 claude-3-sonnet-20240229 claude-3-haiku-20240307)'
        '--permission-mode[Permission mode]:mode:(allowed plan review)'
        '--stream[Enable streaming output]'
    )

    _arguments -C \
        "${global_options[@]}" \
        '1: :->command' \
        '*::arg:->args'

    case $state in
        command)
            _describe -t commands 'claude commands' commands
            ;;
        args)
            case $words[1] in
                config)
                    _claude_config
                    ;;
                mcp)
                    _claude_mcp
                    ;;
            esac
            ;;
    esac
}

_claude_config() {
    local -a subcommands
    subcommands=(
        'set:Set a configuration value'
        'get:Get a configuration value'
        'list:List all configuration values'
        'remove:Remove a configuration value'
    )

    _arguments -C \
        '1: :->subcommand' \
        '*::arg:->args'

    case $state in
        subcommand)
            _describe -t subcommands 'config subcommands' subcommands
            ;;
        args)
            case $words[1] in
                set)
                    local -a config_keys
                    config_keys=(theme model outputdir timeout stream)
                    _arguments \
                        '(-g --global)'{-g,--global}'[Set globally]' \
                        '1:key:(${config_keys[@]})' \
                        '2:value:'
                    ;;
                get|remove)
                    local -a config_keys
                    config_keys=(theme model outputdir timeout stream)
                    _arguments '1:key:(${config_keys[@]})'
                    ;;
            esac
            ;;
    esac
}

_claude_mcp() {
    local -a subcommands
    subcommands=(
        'list:List MCP servers'
        'add:Add an MCP server'
        'remove:Remove an MCP server'
        'add-from-claude-desktop:Import servers from Claude Desktop'
    )

    _arguments -C \
        '1: :->subcommand' \
        '*::arg:->args'

    case $state in
        subcommand)
            _describe -t subcommands 'mcp subcommands' subcommands
            ;;
        args)
            case $words[1] in
                add)
                    _arguments \
                        '1:name:' \
                        '2:path:_files'
                    ;;
                remove)
                    # TODO: Complete with existing server names
                    _arguments '1:name:'
                    ;;
            esac
            ;;
    esac
}

_claude "$@"
